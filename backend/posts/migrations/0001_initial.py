# Generated by Django 3.2.9 on 2022-11-02 21:49

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Юзернейм')),
                ('name', models.CharField(max_length=100, verbose_name='Название чата')),
                ('link', models.URLField(blank=True, max_length=100, null=True, verbose_name='Ссылка на канал')),
                ('sender_id', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Телеграм отправитель id')),
                ('uid', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Телеграм id')),
            ],
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by_admin', models.BooleanField(default=True, verbose_name='Создана админом')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название компании/организации')),
                ('contact_telegram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телеграм для контакта')),
                ('contact_phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Телефон для контакта')),
                ('contact_email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Почта для контакта')),
                ('contact_site', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сайт компании для контакта')),
                ('company_description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание компании')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('about', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание вакансии')),
                ('duties', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Обязанности сотрудника')),
                ('requirements', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Требования к сотруднику')),
                ('skills', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Навыки сотрудника')),
                ('conditions', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Условия работы')),
                ('by_agreement', models.BooleanField(default=False, verbose_name='Зарплата по договоренности?')),
                ('salary_from', models.PositiveIntegerField(blank=True, null=True, verbose_name='Зарплата мин')),
                ('salary_to', models.PositiveIntegerField(blank=True, null=True, verbose_name='Зарплата макс')),
                ('distant_work', models.BooleanField(default=False, verbose_name='Возможность дистанционной работы')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('experience_from', models.PositiveSmallIntegerField(default=0, verbose_name='Опыт работы от, лет')),
                ('experience_to', models.PositiveSmallIntegerField(default=0, verbose_name='Опыт работы до, лет')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, verbose_name='Текст публикации')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.channel')),
            ],
        ),
    ]
